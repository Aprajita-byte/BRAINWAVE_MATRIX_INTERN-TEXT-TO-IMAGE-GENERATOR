"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var next_plugin_exports = {};
__export(next_plugin_exports, {
  withHydrationOverlay: () => withHydrationOverlay,
  withHydrationOverlayWebpack: () => import_webpack.withHydrationOverlayWebpack
});
module.exports = __toCommonJS(next_plugin_exports);
var import_webpack = require("./webpack");
const withHydrationOverlay = (pluginOptions) => (nextConfig = {}) => {
  const extraConfig = {
    webpack(config, ctx) {
      if (!ctx.dev) {
        console.warn(
          "[ReactHydrationOverlay]: This plugin is only meant to be used in development mode. Please remove it from your next.config.js."
        );
      }
      const isMainAppEntryPoint = (entryPointName) => !ctx.isServer && (entryPointName === "pages/_app" || // entrypoint for `/app` pages
      entryPointName === "main-app");
      return (0, import_webpack.withHydrationOverlayWebpack)({
        appRootSelector: pluginOptions.appRootSelector || "#__next",
        isMainAppEntryPoint: (entryPointName) => !ctx.isServer && (entryPointName === "pages/_app" || // entrypoint for `/app` pages
        entryPointName === "main-app")
      })(config);
    }
  };
  return Object.assign({}, nextConfig, extraConfig);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  withHydrationOverlay,
  withHydrationOverlayWebpack
});
